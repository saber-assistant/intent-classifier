from typing import Any, Protocol, Callable, Awaitable

class QueueBackend(Protocol):
    async def enqueue(self, item: Any) -> None: ...
    async def dequeue(self) -> Any: ...
    def task_done(self) -> None: ...
    async def worker(self, process_func: Callable[[Any], Awaitable[None]]) -> None: ...
    async def close(self) -> None: ...